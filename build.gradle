plugins {
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
    id 'org.spongepowered.mixin' version '0.7.+'
}

version = mod_version
group = mod_group_id

base {
    archivesName = mod_id
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {

    mappings channel: mapping_channel, version: mapping_version

    copyIdeResources = true

    runs {
        // applies to all the run configs below
        configureEach {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            property 'forge.logging.console.level', 'debug'

            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }

        client {
            property 'forge.enabledGameTestNamespaces', mod_id
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
        }

        server {
            property 'forge.enabledGameTestNamespaces', mod_id
            args '--nogui'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
        }

        gameTestServer {
            property 'forge.enabledGameTestNamespaces', mod_id
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
        }

        data {
            workingDirectory project.file('run-data')
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        name = "Jared's maven"
        url = "https://maven.blamejared.com/"
    }

    maven {
        name = "CurseMaven"
        url = "https://cursemaven.com/"
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    annotationProcessor "org.spongepowered:mixin:${mixin_version}:processor"

    compileOnly(fg.deobf("mezz.jei:jei-${minecraft_version}-forge-api:${jei_version}"))
    compileOnly(fg.deobf("mezz.jei:jei-${minecraft_version}-common-api:${jei_version}"))
    runtimeOnly(fg.deobf("mezz.jei:jei-${minecraft_version}-forge:${jei_version}"))

    implementation fg.deobf("curse.maven:refurbished-furniture-897116:6272885")
    implementation fg.deobf("curse.maven:framework-549225:6531428")
    implementation fg.deobf("curse.maven:carry-on-274259:4882500")
    implementation fg.deobf("curse.maven:locks-unofficial-1128357:6115787")
    implementation fg.deobf("curse.maven:just-a-lot-more-enchantments-865111:6684663")
    implementation fg.deobf("curse.maven:progressive-tweaks-1163889:6645509")
    implementation fg.deobf("curse.maven:progressive-mechanics-library-1235043:6454177")
    implementation fg.deobf("curse.maven:blessfulled-1182590:6624691")
    implementation fg.deobf("curse.maven:enhancedvisuals-255389:6192498")
    implementation fg.deobf("curse.maven:creativecore-257814:6383884")
    implementation fg.deobf("curse.maven:mutant-monsters-852665:5107399")
    implementation fg.deobf("curse.maven:puzzles-lib-495476:6387081")
    implementation fg.deobf("curse.maven:reforging-station-1202199:6208571")
    implementation fg.deobf("curse.maven:irons-spells-n-spellbooks-855414:6488484")
    implementation fg.deobf("curse.maven:geckolib-388172:6658942")
    implementation fg.deobf("curse.maven:playeranimator-658587:4587214")
    implementation fg.deobf("curse.maven:caelus-308989:5281700")
    implementation fg.deobf("curse.maven:lendercataclysm-551586:6769185")
    implementation fg.deobf("curse.maven:lionfish-api-1001614:5922047")
    implementation fg.deobf("curse.maven:curios-309927:6418456")
    implementation fg.deobf("curse.maven:simply-potion-rings-1217574:6557539")
    implementation fg.deobf("curse.maven:first-aid-276837:5531834")
    implementation fg.deobf("curse.maven:ice-and-fire-dragons-264231:5633453")
    implementation fg.deobf("curse.maven:spartan-weaponry-278141:5597663")
    implementation fg.deobf("curse.maven:citadel-331936:6702068")
    implementation fg.deobf("curse.maven:thirst-was-taken-679270:6660408")
    implementation fg.deobf("curse.maven:dungeon-crawl-324973:6047153")
    implementation fg.deobf("curse.maven:gobs-armory-1232432:6588501")
    implementation fg.deobf("curse.maven:apothecary-potion-expansion-1278100:6637581")
    implementation fg.deobf("curse.maven:dynamictrees-252818:6655713")
    implementation fg.deobf("curse.maven:forgotten-battle-towers-1151901:6554491")
    implementation fg.deobf("curse.maven:cold-sweat-506194:6503192")
    implementation fg.deobf("curse.maven:potion-descriptions-neo-forge-1122213:5815366")

    runtimeOnly(fg.deobf("curse.maven:configured-457570:5180900"))
    runtimeOnly(fg.deobf("curse.maven:catalogue-459701:4766090"))
    runtimeOnly(fg.deobf("curse.maven:crafttweaker-239197:6256146"))
    compileOnly(fg.deobf("curse.maven:itemphysic-258587:6450992"))
}

mixin {
    add sourceSets.main, "${mod_id}.mixins.refmap.json"
    config "${mod_id}.mixins.json"
}

tasks.named('processResources', ProcessResources).configure {
    var replaceProperties = [
            minecraft_version: minecraft_version, minecraft_version_range: minecraft_version_range,
            forge_version: forge_version, forge_version_range: forge_version_range,
            loader_version_range: loader_version_range,
            mod_id: mod_id, mod_name: mod_name, mod_license: mod_license, mod_version: mod_version,
            mod_authors: mod_authors, mod_description: mod_description,
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand replaceProperties + [project: project]
    }
}

tasks.named('jar', Jar).configure {
    manifest {
        attributes([
                'Specification-Title'     : mod_id,
                'Specification-Vendor'    : mod_authors,
                'Specification-Version'   : '1', // We are version 1 of ourselves
                'Implementation-Title'    : project.name,
                'Implementation-Version'  : project.jar.archiveVersion,
                'Implementation-Vendor'   : mod_authors,
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                'MixinConfigs'            : "${mod_id}.mixins.json"
        ])
    }

    finalizedBy 'reobfJar'
}

publishing {
    publications {
        register('mavenJava', MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}